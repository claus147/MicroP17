


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ;R1 : Generator stored here
    3 00000000         ;R2 : The data to test (backwards)
    4 00000000         ;R3 : single ASCII char to be manipulated
    5 00000000         ;R4 : scratch register, decremented at every single char
                        taken in
    6 00000000         ;R5 : scratch register, to check if xor with generator s
                       hould be performed or not
    7 00000000         ;R6 : scratch register, counter for end of single char m
                       anipulation loop
    8 00000000         ;R7 : scratch register, to check for end of single char 
                       manipulation loop
    9 00000000         
   10 00000000                 AREA             text, CODE, READONLY
   11 00000000                 EXPORT           lab1code
   12 00000000         lab1code
   13 00000000         ;first push all registers to use onto stack
   14 00000000 B4FE            PUSH             {R1-R7}
   15 00000002         
   16 00000002 F248 0148       MOV              R1, #0x8048 ;putting generator 
                                                            into R1
   17 00000006         ;MOV R2, #0x34313032 ;putting 4012 into R2
   18 00000006 F243 0232       MOV              R2, #0x3032
   19 0000000A F243 4831       MOV              R8, #0x3431
   20 0000000E F04F 0404       MOV              R4, #4      ;length of the stri
                                                            ng to do crc
   21 00000012         
   22 00000012         nextchar
   23 00000012 B1A4            CBZ              R4, toend   ;check to see if la
                                                            st char
   24 00000014 F1A4 0401       SUB              R4, R4, #1  ;decrement number o
                                                            f chars to use
   25 00000018 F081 03FF       EOR              R3, R1, #0xFF ;take the first 8
                                                             bits to be manipul
                                                            ated (lsb)
   26 0000001C EA4F 2111       LSR              R1, R1, #8  ;shift the number r
                                                            ight for prep to ta
                                                            ke in next number
   27 00000020         singlecharcompare
   28 00000020 F04F 0601       MOV              R6, #0x1    ;have a counter, up
                                                             to 8
   29 00000024 F003 0501       AND              R5, R3, #0x1 ;check if last bit
                                                             is a 1
   30 00000028 EA4F 0353       LSR              R3, R3, #1  ;regardless if last
                                                             bit is 1 we shift 
                                                            right
   31 0000002C B10D            CBZ              R5, nocompare ;compare and bran
                                                            ch if 0
   32 0000002E         compare
   33 0000002E EA83 0301       EOR              R3, R3, R1  ;xor what we have w
                                                            ith generator
   34 00000032         nocompare
   35 00000032 F106 0601       ADD              R6, R6, #0x1 ;increment counter
                                                            
   36 00000036 F1A6 0708       SUB              R7, R6, #8  ;check if 8th time 
                                                            (end of ASCII char)
                                                            
   37 0000003A DE00            CBZ              R7, nextchar ;bring the next AS
                                                            CII char in 



ARM Macro Assembler    Page 2 


   38 0000003C E7F0            B                singlecharcompare ;if not time 
                                                            to bring the next c
                                                            har in keep going
   39 0000003E         toend
   40 0000003E BCFE            POP              {R1-R7}     ;cleanup
   41 00000040 4770            BX               LR          ;
   42 00000042                 END
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
ect\lab1code.d -o.\object\lab1code.o -I"C:\Users\Claus\Documents\!McGill\!Fall 
2014\ECSE 426\MicroP17\Lab 1 Base Project\RTE" -I"C:\Users\Claus\Documents\!McG
ill\!Fall 2014\ECSE 426\MicroP17\Lab 1 Base Project\RTE\Device\STM32F407VG" -IC
:\Keil_v5\ARM\PACK\ARM\CMSIS\4.1.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM
32F4xx_DFP\1.0.8\Device\Include --predefine="__EVAL SETA 1" --predefine="__MICR
OLIB SETA 1" --list=.\listings\lab1code.lst lab1code.s
